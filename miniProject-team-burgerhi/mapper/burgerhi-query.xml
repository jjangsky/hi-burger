<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="loginResult">
		SELECT
		       A.USER_NO
		     , A.USER_NAME
		     , A.USER_ID
		     , A.USER_PWD
		     , A.GRADE_NO
		     , A.USER_POINT
		     , A.PHONE
		     , A.USER_YN
		  FROM USER_TABLE A
		 WHERE A.USER_ID = ?
		   AND A.USER_PWD = ?
		   AND A.USER_YN = 'Y'
	</entry>
	
	<entry key="selectAllCategory">
		SELECT A.CATEGORY_CODE
		     , A.CATEGORY_NAME
		     , A.REF_CATEGORY_CODE
		     , NVL(B.CATEGORY_NAME, '미지정')
		  FROM CATEGORY_TABLE A
		  LEFT JOIN CATEGORY_TABLE B ON(A.REF_CATEGORY_CODE = B.CATEGORY_CODE)
		 ORDER BY 1
	</entry>
	
	<entry key="selectMenuBy">
		SELECT
		       A.MENU_CODE
		     , A.MENU_NAME
		     , A.PRICE
		     , A.MENU_EXPLAIN
		     , A.CATEGORY_CODE
		     , A.ORDERABLE
		  FROM MENU_TABLE A
		 WHERE A.CATEGORY_CODE = ?
	</entry>
	
	<entry key="insertOrderMenu">
		INSERT
		  INTO ORDER_MENU_TABLE
		(
		  ORDER_MENU_NO
		, USER_NO
		, MENU_CODE
		, ORDER_AMOUNT
		)
		VALUES
		(
		  SEQ_ORDER_MENU_NO.NEXTVAL
		, ?
		, ?
		, ?
		)
	</entry>
	
	<entry key="selectOrderMenuPrice">
	    SELECT
     	       A.PRICE
 	      FROM MENU_TABLE A
 	     WHERE A.MENU_CODE = ?
	</entry>
	
	<entry key="selectOrderMenu">
		SELECT
		  	   A.ORDER_MENU_NO
		  	 , A.MENU_CODE
    		 , B.MENU_NAME
    		 , A.ORDER_AMOUNT
    		 , B.PRICE
  		  FROM ORDER_MENU_TABLE A
          JOIN MENU_TABLE B ON (A.MENU_CODE = B.MENU_CODE)
	</entry>
	
	<entry key="deleteOrderMenu">
 		DELETE
 		  FROM ORDER_MENU_TABLE A
 		 WHERE A.MENU_CODE = ?
	</entry>
	
	<entry key="selectAllCard">
		SELECT
 		      A.CARD_CODE
 		    , A.CARD_BANK
 		    , A.CARD_DISCOUNT
 		    , A.CARDABLE
		  FROM CARD_TABLE A
	</entry>
	
	<entry key="insertOrder">
        INSERT
          INTO ORDER_TABLE A
        (
          A.ORDER_CODE
        , A.ORDER_DATE
        , A.PAYMENT_PRICE
        )
        VALUES
        (
          SEQ_ORDER_CODE.NEXTVAL
        , ?
        , ?
        )
	</entry>
	<entry key="selectLastOrderCode">
        SELECT
     		   MAX(A.ORDER_CODE)
 		  FROM ORDER_TABLE A
	</entry>
	<entry key="insertPayment">
        INSERT
          INTO PAYMENT_TABLE A
        (
          A.PAYMENT_NO
        , A.ORDER_CODE
        , A.USER_NO
        , A.TOTAL_PRICE
        , A.GRADE_NO
        , A.CARD_CODE
        , A.PAYMENT_PRICE
        , A.PAYMENT_BY
        )
        VALUES
        (
         SEQ_PAYMENT_NO.NEXTVAL
        , ?
        , ?
        , ?
        , ?
        , ?
        , ?
        , ?
        )
	</entry>
	<entry key ="selectGifticonBy">
	    SELECT
	    	   GIFTICON_NO
			 , GIFTICON_PRICE
  	      FROM GIFTICON_TABLE
 	     WHERE GIFTICON_NO = ?
	</entry>
	<entry key="updateGifticonPrice">
	    UPDATE GIFTICON_TABLE A
   	       SET A.GIFTICON_PRICE = ?
	     WHERE A.GIFTICON_NO = ?
	</entry>
	<entry key="insertCategory">
	    INSERT
	      INTO CATEGORY_TABLE A
	    (
	      A.CATEGORY_CODE
	    , A.CATEGORY_NAME
	    , A.REF_CATEGORY_CODE
	    )
	    VALUES
	    (
	      SEQ_CATEGORY_CODE.NEXTVAL
	    , ?
	    , ?
	    )
	</entry>
	<entry key="updateCategory">
		UPDATE CATEGORY_TABLE A
		   SET A.CATEGORY_NAME = ?
		     , A.REF_CATEGORY_CODE = ?
		 WHERE A.CATEGORY_CODE = ?
	</entry>
	<entry key="deleteCategory">
	    DELETE 
	      FROM CATEGORY_TABLE A
	     WHERE A.CATEGORY_NAME = ?
	</entry>
	<entry key="selectAllMenu">
	    	SELECT 
                   MENU_CODE
                 , MENU_NAME
                 , PRICE
                 , MENU_EXPLAIN
                 , CATEGORY_CODE
                 , ORDERABLE
              FROM MENU_TABLE
	</entry>
	<entry key="insertMenu">
	    	INSERT
              INTO MENU_TABLE
            ( 
              MENU_CODE
            , MENU_NAME
            , PRICE
            , MENU_EXPLAIN
            , CATEGORY_CODE
            , ORDERABLE
            )
            VALUES
            (
              SEQ_MENU_CODE.NEXTVAL
            , ?                      
            , ?                      
            , ?                      
            , ?                      
            , ?                      
            )
	</entry>
	<entry key="updateMenu">
	    	UPDATE
              MENU_TABLE
               SET MENU_NAME = ?
                 , PRICE = ?
                 , MENU_EXPLAIN = ?
                 , CATEGORY_CODE = ?
                 , ORDERABLE = ?
              WHERE MENU_CODE = ?
	</entry>
	<entry key="deleteMenu">
	    	DELETE
              FROM MENU_TABLE
             WHERE MENU_NAME = ?
	</entry>
	<entry key="selectHambergerRanking">
	    SELECT 
	           A.MENU_CODE
	         , B.MENU_NAME
	         , SUM(A.MENU_AMOUNT)
	      FROM SALES_AMOUNT_TABLE A
	      JOIN MENU_TABLE B ON (A.MENU_CODE = B.MENU_CODE)
	     WHERE B.CATEGORY_CODE = 1
	     GROUP BY A.MENU_CODE, B.MENU_NAME
	     ORDER BY 3 DESC
	</entry>
	<entry key="selectDrinkRanking">
	    SELECT 
 	          A.MENU_CODE
	         , B.MENU_NAME
	         , SUM(A.MENU_AMOUNT)
	      FROM SALES_AMOUNT_TABLE A
	      JOIN MENU_TABLE B ON (A.MENU_CODE = B.MENU_CODE)
	     WHERE B.CATEGORY_CODE = 2
	     GROUP BY A.MENU_CODE, B.MENU_NAME
	     ORDER BY 3 DESC
	</entry>
	<entry key="selectSideRanking">
	    SELECT 
 	          A.MENU_CODE
	         , B.MENU_NAME
	         , SUM(A.MENU_AMOUNT)
	      FROM SALES_AMOUNT_TABLE A
	      JOIN MENU_TABLE B ON (A.MENU_CODE = B.MENU_CODE)
	     WHERE B.CATEGORY_CODE = 3
	     GROUP BY A.MENU_CODE, B.MENU_NAME
	     ORDER BY 3 DESC
 	</entry> 
	<entry key="selectMonthSales">
       SELECT SUM(PAYMENT_PRICE)
          FROM ORDER_TABLE
         WHERE ORDER_DATE LIKE '2022/' || ? || '%'
   </entry>
	<entry key="selectDateSales">
       SELECT ORDER_DATE
            , SUM(PAYMENT_PRICE)
         FROM ORDER_TABLE
        GROUP BY ORDER_DATE 
       HAVING ORDER_DATE LIKE '2022/' || ? || '/' || ?
   </entry>
	<entry key="selectGradeSales">
	   SELECT
   	          B.GRADE_NO
   	        , SUM(A.PAYMENT_PRICE)
 	     FROM PAYMENT_TABLE A
  	    RIGHT JOIN GRADE_TABLE B ON (A.GRADE_NO = B.GRADE_NO)
  	    GROUP BY B.GRADE_NO
        ORDER BY 1
	</entry>
	<entry key="deleteAllOrderMenu">
	    DELETE
	      FROM ORDER_MENU_TABLE
	</entry>
	
	<entry key="selectUserBy">
	    SELECT
   	           A.USER_NO
   	         , A.USER_NAME
    	     , A.USER_ID
   	 		 , RPAD(SUBSTR(A.USER_PWD,1, 4), 10 , '#')
   	 		 , B.GRADE_NAME
 	         , A.USER_POINT
 	         , A.PHONE
  	     FROM USER_TABLE A
  	     JOIN GRADE_TABLE B ON (A.GRADE_NO = B.GRADE_NO)
 	     WHERE A.USER_NO = ?
	</entry>
	
	<entry key="updateUserInfo">
	    UPDATE
	           USER_TABLE A
	       SET A.USER_PWD = ?
	         , A.PHONE = ?
	     WHERE A.USER_NO = ?
	</entry>
	
	<entry key="deleteUserBy">
	    UPDATE
	           USER_TABLE A
	       SET A.USER_YN = 'N'
	     WHERE A.USER_NO = ?
	</entry>
	
	<entry key="selectCard">
	    SELECT
	    	   A.CARD_CODE
	    	 , A.CARD_BANK
	    	 , A.CARD_DISCOUNT
	    	 , A.CARDABLE
	      FROM CARD_TABLE A
	</entry>
	<entry key="selectGrade">
	    SELECT
  	           A.DISCOUNT
 	      FROM GRADE_TABLE A
  	     WHERE A.GRADE_NO = ?
	</entry>
	<entry key="insertUser">
	    INSERT
          INTO USER_TABLE
        (
          USER_NO
        , USER_NAME
        , USER_ID
        , USER_PWD
        , GRADE_NO
        , PHONE
        )
        VALUES
        (
          SEQ_USER_NO.NEXTVAL
        , ?
        , ?
        , ?
        , 1
        , ?
        )
	</entry>
	<entry key="selectNonMemberGradeNo">
	    SELECT
	           A.GRADE_NO
	      FROM GRADE_TABLE A
	     WHERE A.DISCOUNT = 0
	</entry>
	<entry key="insertNonMemberUser">
	    INSERT
	      INTO USER_TABLE
	    (
	      USER_NO
	    , GRADE_NO
	    , USER_POINT
	    , USER_YN
	    )
	    VALUES
	    (
	      SEQ_USER_NO.NEXTVAL
	    , ?
	    , ?
	    , ?
	    )
	</entry>
	
	<entry key="selectNonMemberUserNo">
	    SELECT
      	       MAX(A.USER_NO)
  	      FROM USER_TABLE A
	</entry>
	<entry key="insertSalesAmount">
	    INSERT
 	     INTO SALES_AMOUNT_TABLE
	    (
 	      SALES_AMOUNT_NO
	    , ORDER_CODE
	    , MENU_CODE
	    , MENU_AMOUNT
	    , MENU_PRICE
	    )
	    VALUES
	    (
	      SEQ_SALES_AMOUNT_NO.NEXTVAL
	    , ?
	    , ?
	    , ?
	    , ?
	    )
	</entry>
	
	<entry key="deleteSalesAmount">
	     DELETE
	      FROM SALES_AMOUNT_TABLE A
	     WHERE A.MENU_CODE = ?
	</entry>
	<entry key="selectMethodSales">
	    SELECT 
	    PAYMENT_BY
	    ,SUM(PAYMENT_PRICE)
	      FROM PAYMENT_TABLE
	     GROUP BY PAYMENT_BY
	     ORDER BY PAYMENT_BY
	</entry>
	<entry key="selectAllSales">
       SELECT
              SUM(PAYMENT_PRICE)
         FROM PAYMENT_TABLE
   </entry>

   <entry key="selectRefMenu">
      SELECT
             A.MENU_CODE
           , A.MENU_NAME
           , A.PRICE
           , A.MENU_EXPLAIN
           , A.CATEGORY_CODE
        FROM MENU_TABLE A
       WHERE A.CATEGORY_CODE = (SELECT B.REF_CATEGORY_CODE
                                  FROM CATEGORY_TABLE B
                                 WHERE B.CATEGORY_CODE = ? )
	</entry>
   <entry key="insertGifticonEvent">
      INSERT
             INTO GIFTICON_TABLE 
             (
               GIFTICON_NO
             , GIFTICON_PRICE
             )
             VALUES
             (
               TO_CHAR(SYSDATE, 'YYmmDD')|| '-' || SEQ_GIFTICON_NO.NEXTVAL || '-0306'
             , ?
             )
   </entry>
   <entry key="selectlastgifticon">
       SELECT
              GIFTICON_NO
            , GIFTICON_PRICE
         FROM GIFTICON_TABLE
        WHERE GIFTICON_NO = (SELECT
                                    MAX(GIFTICON_NO)
                               FROM GIFTICON_TABLE
                            )
   </entry>
   <entry key="updateMemberPoint">
  	    UPDATE
               USER_TABLE
           SET USER_POINT = ?
        WHERE USER_NO = ?
   </entry>
   <entry key="selectMemberPoint">
       SELECT
              USER_POINT
         FROM USER_TABLE
        WHERE USER_NO = ?
   </entry>
   <entry key="updateGoldGrade">
       UPDATE
              USER_TABLE
          SET GRADE_NO = 3
        WHERE USER_NO = ?
   </entry>
   <entry key="updateSilverGrade">
       UPDATE
              USER_TABLE
          SET GRADE_NO = 2
        WHERE USER_NO = ?
   </entry>
   <entry key="updateFamilyGrade">
       UPDATE
              USER_TABLE
          SET GRADE_NO = 1
        WHERE USER_NO = ?
   </entry>
   
   <entry key="selectAllBurger">
		SELECT
		       A.MENU_CODE
		     , A.MENU_NAME
		     , A.PRICE
		     , A.MENU_EXPLAIN
		     , A.CATEGORY_CODE
		     , A.ORDERABLE
		  FROM MENU_TABLE A
		 WHERE A.CATEGORY_CODE = 1
	</entry>
	
	<entry key="selectAllDrink">
		SELECT
		       A.MENU_CODE
		     , A.MENU_NAME
		     , A.PRICE
		     , A.MENU_EXPLAIN
		     , A.CATEGORY_CODE
		     , A.ORDERABLE
		  FROM MENU_TABLE A
		 WHERE A.CATEGORY_CODE = 2
	</entry>
	
	<entry key="selectAllSide">
		SELECT
		       A.MENU_CODE
		     , A.MENU_NAME
		     , A.PRICE
		     , A.MENU_EXPLAIN
		     , A.CATEGORY_CODE
		     , A.ORDERABLE
		  FROM MENU_TABLE A
		 WHERE A.CATEGORY_CODE = 3
	</entry>
	
	<entry key="insertDrinkMenu">
		INSERT
		  INTO ORDER_MENU_TABLE
		(
		  ORDER_MENU_NO
		, USER_NO
		, MENU_CODE
		, ORDER_AMOUNT
		)
		VALUES
		(
		  SEQ_ORDER_MENU_NO.NEXTVAL
		, ?
		, 4
		, ?
		)
	</entry>
	
	<entry key="insertSetMenu">
		INSERT
		  INTO ORDER_MENU_TABLE
		(
		  ORDER_MENU_NO
		, USER_NO
		, MENU_CODE
		, ORDER_AMOUNT
		)
		VALUES
		(
		  SEQ_ORDER_MENU_NO.NEXTVAL
		, ?
		, 6
		, ?
		)
	</entry>
	<entry key = "deleteOrderMenuAmount">
	    DELETE
 	     FROM ORDER_MENU_TABLE
 	    WHERE ORDER_MENU_NO = (SELECT
                              	      MAX(ORDER_MENU_NO)
                        	     FROM ORDER_MENU_TABLE
                       	        WHERE MENU_CODE = ?)
	</entry>
	<entry key="selectAllUser">
	    SELECT
	           A.USER_NO
	         , A.USER_NAME
	         , A.USER_ID
	         , B.GRADE_NAME
	         , A.USER_POINT
	         , A.PHONE
	         , A.USER_YN
	      FROM USER_TABLE A
	      JOIN GRADE_TABLE B ON (A.GRADE_NO = B.GRADE_NO)
	     WHERE A.USER_NAME IS NOT NULL
	     ORDER BY A.USER_NO
	</entry>
	<entry key = "selectUserUpgrade">
	    SELECT
	    	   GRADE_NO
	      FROM USER_TABLE
	     WHERE USER_NO = ?
	</entry>
	<entry key="updateUserGrade">
        UPDATE USER_TABLE A
           SET A.GRADE_NO = ?
         WHERE USER_NO = ?
   </entry>
   <entry key="selectUserIdCheck">
       SELECT
              COUNT(*)
         FROM USER_TABLE
        WHERE USER_ID = ?
   </entry>
</properties>
